Automatically generated by Mendeley Desktop 1.19.8
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Options -> BibTeX in Mendeley Desktop

@article{Rahman2023,
abstract = {The automated code evaluation system (AES) is mainly designed to reliably assess user-submitted code. Due to their extensive range of applications and the accumulation of valuable resources, AESs are becoming increasingly popular. Research on the application of AES and their real-world resource exploration for diverse coding tasks is still lacking. In this study, we conducted a comprehensive survey on AESs and their resources. This survey explores the application areas of AESs, available resources, and resource utilization for coding tasks. AESs are categorized into programming contests, programming learning and education, recruitment, online compilers, and additional modules, depending on their application. We explore the available datasets and other resources of these systems for research, analysis, and coding tasks. Moreover, we provide an overview of machine learning-driven coding tasks, such as bug detection, code review, comprehension, refactoring, search, representation, and repair. These tasks are performed using real-life datasets. In addition, we briefly discuss the Aizu Online Judge platform as a real example of an AES from the perspectives of system design (hardware and software), operation (competition and education), and research. This is due to the scalability of the AOJ platform (programming education, competitions, and practice), open internal features (hardware and software), attention from the research community, open source data (e.g., solution codes and submission documents), and transparency. We also analyze the overall performance of this system and the perceived challenges over the years.},
archivePrefix = {arXiv},
arxivId = {2307.08705},
author = {Rahman, Md. Mostafizer and Watanobe, Yutaka and Shirafuji, Atsushi and Hamada, Mohamed},
doi = {10.48550/arXiv.2307.08705},
eprint = {2307.08705},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2023/Exploring Automated Code Evaluation Systems and Resources for Code Analysis A Comprehensive Survey - Unknown - 2023.pdf:pdf},
number = {July},
title = {{Exploring Automated Code Evaluation Systems and Resources for Code Analysis: A Comprehensive Survey}},
url = {http://arxiv.org/abs/2307.08705},
year = {2023}
}
@phdthesis{Schonmann2021,
author = {Sch{\"{o}}nmann, Antonio},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2021/ACE um Juiz Online com An{\'{a}}lise Autom{\'{a}}tica de Complexidade - Unknown - 2021.pdf:pdf},
school = {UFRJ},
title = {{ACE : um Juiz Online com An{\'{a}}lise Autom{\'{a}}tica de Complexidade}},
year = {2021}
}
@phdthesis{Bastiani2022,
abstract = {ביקורת ספרות, "הבז", ספרות טבע,},
author = {Bastiani, Ederson},
booktitle = {UFRGS},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2022/Desenvolvimento e valida{\c{c}}{\~{a}}o de uma ferramenta computacional apoiada por minera{\c{c}}{\~{a}}o de texto voltada {\`{a}} qualifica{\c{c}}{\~{a}}o da escrita de p.pdf:pdf},
number = {8.5.2017},
pages = {2003--2005},
title = {{Desenvolvimento e valida{\c{c}}{\~{a}}o de uma ferramenta computacional apoiada por minera{\c{c}}{\~{a}}o de texto voltada {\`{a}} qualifica{\c{c}}{\~{a}}o da escrita de projetos de pesquisa}},
year = {2022}
}
@article{Amparo2021,
abstract = {Pages: 539-553 Resumen: En la actualidad, las necesidades del medio social y profesional exige a los estudiantes un crecimiento en la soluci{\'{o}}n de problemas complejos, adem{\'{a}}s de promover el dialogo colaborativo y reflexivo de saberes bajo un marco de confianza, cooperaci{\'{o}}n y el uso de diversas t{\'{e}}cnicas y habilidades para generar soluci{\'{o}}n a problemas de forma efectiva. La programaci{\'{o}}n competitiva no solo promueve el aprendizaje colaborativo, sino que fomenta la creatividad, el trabajo en equipo y la innovaci{\'{o}}n, entre estudiantes, creando soluciones que den respuestas a situaciones problem{\'{a}}ticas mediante el uso de la algoritmia. La educaci{\'{o}}n actual debe adaptarse al avance de las nuevas tecnolog{\'{i}}as y apropiar estrategias did{\'{a}}cticas que potencien el proceso ense{\~{n}}anza aprendizaje, en este contexto es que surge esta propuesta de trabajo colaborativo, que implica la capacidad de adaptaci{\'{o}}n al cambio y de autoaprendizaje; convirti{\'{e}}ndose en una herramienta clave que permita la construcci{\'{o}}n colaborativa del conocimiento. Palabras-clave: aprendizaje colaborativo; programaci{\'{o}}n competitiva; Estrategia did{\'{a}}ctica; maratones de programaci{\'{o}}n Competitive programming as a didactic strategy to promote collaborative learning in engineering students Abstract: At present, the needs of the social and professional environment requires students to grow in solving complex problems, in addition to promoting collaborative and reflective dialogue of knowledge under a framework of trust, cooperation and the use of various techniques and skills to generate solutions to problems. an effective form. Competitive programming not only promotes collaborative learning, but also encourages creativity, teamwork and innovation},
author = {Amparo, Gloria and Pati{\~{n}}o, Lora and {Hern{\'{a}}n Suaza Jim{\'{e}}nez}, Jorge and Andrea, Paula and Mar{\'{i}}n, Rodr{\'{i}}guez and Bland{\'{o}}n, Gabriel Taborda},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2021/Programaci{\'{o}}n competitiva como estrategia did{\'{a}}ctica para potenciar el aprendizaje colaborativo en estudiantes de ingenier{\'{i}}a - Revis.pdf:pdf},
issn = {16469895},
journal = {Revista Ib{\'{e}}rica de Sistemas e Tecnologias de Informa{\c{c}}{\~{a}}o},
pages = {539--553},
title = {{Programaci{\'{o}}n competitiva como estrategia did{\'{a}}ctica para potenciar el aprendizaje colaborativo en estudiantes de ingenier{\'{i}}a}},
url = {https://www.proquest.com/docview/2483101826?pq-origsite=gscholar&fromopenview=true},
volume = {N.{\textordmasculine} E39},
year = {2021}
}
@phdthesis{Nunes2017,
author = {Nunes, Felipe Becker},
booktitle = {UFRGS},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2017/Um m{\'{e}}todo de ensino pautado na aprendizagem integrada aos mundos virtuais e princ{\'{i}}pios do mastery learning - UFRGS - 2017.pdf:pdf},
isbn = {1716864739},
pages = {9--15},
title = {{Um m{\'{e}}todo de ensino pautado na aprendizagem integrada aos mundos virtuais e princ{\'{i}}pios do mastery learning}},
volume = {4},
year = {2017}
}
@article{Combefis2022,
abstract = {Automatically assessing code for learning purposes is a challenging goal to achieve. On-site courses and online ones developed for distance learning both require automated ways to grade learners' programs to be able to scale and manage a large public with a limited teaching staff. This paper reviews recent automated code assessment systems. It proposes a systematic review of the possible analyses they can perform with the associated techniques, the kinds of produced feedback and the ways they are integrated in the learning process. It then discusses the key challenges for the development of new automated code assessment systems and the interaction with human grading. In conclusion, the paper draws several recommendations for new research directions and for possible improvements for automatic code assessment.},
author = {Comb{\'{e}}fis, S{\'{e}}bastien},
doi = {10.3390/software1010002},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2022/Automated Code Assessment for Education Review, Classification and Perspectives on Techniques and Tools - Software - 2022.pdf:pdf},
journal = {Software},
keywords = {automated code assessment,code analysis techniques,code graders},
number = {1},
pages = {3--30},
title = {{Automated Code Assessment for Education: Review, Classification and Perspectives on Techniques and Tools}},
volume = {1},
year = {2022}
}
@misc{WasikSzymonandAntczakMaciejandBaduraJanandLaskowskiArturandSternal2018,
abstract = {Online judges are systems designed for the reliable evaluation of algorithm source code submitted by users, which is next compiled and tested in a homogeneous environment. Online judges are becoming popular in various applications. Thus, we would like to review the state of the art for these systems. We classify them according to their principal objectives into systems supporting organization of competitive programming contests, enhancing education and recruitment processes, facilitating the solving of data mining challenges, online compilers and development platforms integrated as components of other custom systems. Moreover, we introduce a formal definition of an online judge system and summarize the common evaluation methodology supported by such systems. Finally, we briefly discuss an Optil.io platform as an example of an online judge system, which has been proposed for the solving of complex optimization problems. We also analyze the competition results conducted using this platform. The competition proved that online judge systems, strengthened by crowdsourcing concepts, can be successfully applied to accurately and efficiently solve complex industrial- and science-driven challenges},
archivePrefix = {arXiv},
arxivId = {2204.01632},
author = {{Wasik, Szymon and Antczak, Maciej and Badura, Jan and Laskowski, Artur and Sternal}, Tomasz},
booktitle = {IEEE International Conference on Program Comprehension},
doi = {10.1145/nnnnnnn.nnnnnnn},
eprint = {2204.01632},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2018/A Survey on Online Judge Systems and Their Applications - IEEE International Conference on Program Comprehension - 2018.pdf:pdf},
isbn = {9781450392983},
keywords = {automatic documentation generation,evaluation metrics,source code summarization},
number = {1},
pages = {36--47},
title = {{A Survey on Online Judge Systems and Their Applications}},
volume = {2022-March},
year = {2018}
}
@article{Zhang2020,
abstract = {Code validation is a complicated and overloaded task to the Experimental instructor of Programming courses. In order to solve this problem, an online judging based experimental teaching platform is developed which has the functions of online arrangement experiment for the teachers, online coding and automatic evaluation for the students. Through the application of online judge technology in the experimental teaching of data structure and other courses, it not only can improve the students' problem solving ability but also can assist the teacher to review the experiment quickly and correctly, greatly reducing the workload of teachers, and improving the quality of experimental teaching obviously.},
author = {Zhang, Hua and Zhang, Miao and Meng, Fan-chao and Zhou, Xue-quan and Chu, Dian-hui},
doi = {10.2991/assehr.k.201023.059},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2020/Application of the Online Judge Technology in Programming Experimental Teaching - Unknown - 2020.pdf:pdf},
keywords = {10,8,9,based on hdoj,based on poj,experimental teaching,hundred exercises,multi-level programming,online judge technology,peking,programming,s,technology has established a,training mode,university},
number = {Mmet},
pages = {296--299},
title = {{Application of the Online Judge Technology in Programming Experimental Teaching}},
volume = {480},
year = {2020}
}
@book{Liu2023,
abstract = {Online Judge platforms play a pivotal role in education, competitive programming, recruitment, career training, and large language model training. They rely on predefined test suites to judge the correctness of submitted solutions. It is therefore important that the solution judgement is reliable and free from potentially misleading false positives (i.e., incorrect solutions that are judged as correct). In this paper, we conduct an empirical study of 939 coding problems with 541,552 solutions, all of which are judged to be correct according to the test suites used by the platform, finding that 43.4% of the problems include false positive solutions (3,440 bugs are revealed in total). We also find that test suites are, nevertheless, of high quality according to widely-studied test effectiveness measurements: 88.2% of false positives have perfect (100%) line coverage, 78.9% have perfect branch coverage, and 32.5% have a perfect mutation score. Our findings indicate that more work is required to weed out false positive solutions and to further improve test suite effectiveness. We have released the detected false positive solutions and the generated test inputs to facilitate future research.},
author = {Liu, Kaibo and Han, Yudong and Zhang, Jie M. and Chen, Zhenpeng and Sarro, Federica and Harman, Mark and Huang, Gang and Ma, Yun},
booktitle = {ISSTA 2023 - Proceedings of the 32nd ACM SIGSOFT International Symposium on Software Testing and Analysis},
doi = {10.1145/3597926.3598060},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2023/Who Judges the Judge An Empirical Study on Online Judge Tests - ISSTA 2023 - Proceedings of the 32nd ACM SIGSOFT International Symposium.pdf:pdf},
isbn = {9798400702211},
keywords = {Online judge platform,software testing,test assessment},
number = {1},
pages = {334--346},
publisher = {Association for Computing Machinery},
title = {{Who Judges the Judge: An Empirical Study on Online Judge Tests}},
volume = {1},
year = {2023}
}
@article{Strijbol2023,
abstract = {In educational contexts, automated assessment tools (AAT) are commonly used to provide formative feedback on programming exercises. However, designing exercises for AAT remains a laborious task or imposes limitations on the exercises. Most AAT use either output comparison, where the generated output is compared against an expected output, or unit testing, where the tool has access to the code of the submission under test. While output comparison has the advantage of being programming language independent, the testing capabilities are limited to the output. Conversely, unit testing can generate more granular feedback, but is tightly coupled with the programming language of the submission. In this paper, we introduce TESTed, which enables the best of both worlds: combining the granular feedback of unit testing with the programming language independence of output comparison. Educators can save time by designing exercises that can be used across programming languages. Finally, we report on using TESTed in educational practice.},
author = {Strijbol, Niko and {Van Petegem}, Charlotte and Maertens, Rien and Sels, Boris and Scholliers, Christophe and Dawyndt, Peter and Mesuere, Bart},
doi = {10.1016/j.softx.2023.101404},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2023/TESTed—An educational testing framework with language-agnostic test suites for programming exercises - SoftwareX - 2023.pdf:pdf},
issn = {23527110},
journal = {SoftwareX},
keywords = {Automated assessment tools,Educational software testing,Feedback,Programming},
pages = {101404},
publisher = {Elsevier B.V.},
title = {{TESTed—An educational testing framework with language-agnostic test suites for programming exercises}},
url = {https://doi.org/10.1016/j.softx.2023.101404},
volume = {22},
year = {2023}
}
@article{Pereira2023,
abstract = {Online judges (OJ) are a popular tool to support programming learning. However, one major issue with OJs is that problems are often put together without any associated meta-information that could, for example, be used to help classify problems. This meta-information could be extremely valuable to help users quickly find what types of problems they need most. To face this problem, several OJ administrators have recently begun manually annotating the topics of problems based on computer science-related subjects, such as dynamic programming, graphs, and data structures. Initially, these topics were used to support programming competitions and experienced learners. However, with OJs being increasingly used to support CS1 classes, such topic annotation needs to be extended to suit CS1 learners and instructors. In this work, for the first time, to the best of our knowledge, we propose and validate a predictive model that can automatically detect fine-grained topics of problems based on the CS1 syllabus. After experimenting with many shallow and deep learning models with different word representations based on cutting-edge NLP techniques, our best model is a CNN, achieving an F1-score of 88.9%. We then present how our model can be used for various applications, including (i) facilitating the search process of problems for CS1 learners and instructors and (ii) how it can be integrated into a system to recommend problems in OJs.},
author = {Pereira, Filipe Dwan and Fonseca, Samuel C. and Wiktor, Sandra and Oliveira, David B.F. and Cristea, Alexandra I. and Benedict, Aileen and Fallahian, Mohammadali and Dorodchi, Mohsen and Carvalho, Leandro S.G. and Mello, Rafael Ferreira and Oliveira, Elaine H.T.},
doi = {10.1109/ACCESS.2023.3247189},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2023/Toward Supporting CS1 Instructors and Learners With Fine-Grained Topic Detection in Online Judges - IEEE Access - 2023.pdf:pdf},
issn = {21693536},
journal = {IEEE Access},
keywords = {CS1 syllabus,deep learning,natural language processing,programming autograder,topic detection},
number = {March},
pages = {22513--22525},
publisher = {IEEE},
title = {{Toward Supporting CS1 Instructors and Learners With Fine-Grained Topic Detection in Online Judges}},
volume = {11},
year = {2023}
}
@book{Beaudoin2023,
abstract = {In this article, we present an educational reform we implemented a few years ago to respond to a marked drop in the success of students entering higher education in computer science. The main objective of our reform is to adapt the teaching methods of Generation X-Y to Generation Y-Z or more. To do this, we propose two approaches. First, to make learning more active, stimulating and empowering. Second, to make learning more individualized in a context of a large group of students with an optimization of the teacher's time. We first present an analysis of the probable reasons for the lower level of students and the specific issues encountered by both students and teachers. Then, we detail how we implemented these solutions in the form of an original e-learning platform based on two back-end tools able to manage large number of students: an efficient real-time auto-corrector of source codes and a very robust anti-plagiarism software based on computer distance information theory. Finally, we present the results obtained after an experimentation of 8 years. These results are put into perspective by an analysis of 15 years of qualitative and quantitative indicators carried out on hundreds of students each year. The analysis shows that the technical skills and the involvement of students are improved even in groups of several hundreds of students. Computer science teachers wishing to quickly and concretely develop the involvement of their students can rely on these tried and tested key levers and solutions presented.},
author = {Beaudoin, Laurent and Avanthey, Lo{\"{i}}ca},
booktitle = {Education and Information Technologies},
doi = {10.1007/s10639-022-11407-8},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2023/How to help digital-native students to successfully take control of their learning A return of 8 years of experience on a computer scien.pdf:pdf},
isbn = {0123456789},
issn = {15737608},
keywords = {Auto-monitoring,Automatic corrector,Automatic plagiarism detector,Computer science education,E-learning platform,Near real-time feedback},
number = {5},
pages = {5421--5451},
publisher = {Springer US},
title = {{How to help digital-native students to successfully take control of their learning: A return of 8 years of experience on a computer science e-learning platform in higher education}},
url = {https://doi.org/10.1007/s10639-022-11407-8},
volume = {28},
year = {2023}
}
@phdthesis{Molon2022,
abstract = {ביקורת ספרות, "הבז", ספרות טבע,},
author = {Molon, Jaqueline},
booktitle = {UFRGS},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2022/Identifica{\c{c}}{\~{a}}o de estrat{\'{e}}gias cognitivas elaboradas por estudantes na resolu{\c{c}}{\~{a}}o de situa{\c{c}}{\~{o}}es-problema em matem{\'{a}}tica por meio de u.pdf:pdf},
number = {8.5.2017},
pages = {2003--2005},
title = {{Identifica{\c{c}}{\~{a}}o de estrat{\'{e}}gias cognitivas elaboradas por estudantes na resolu{\c{c}}{\~{a}}o de situa{\c{c}}{\~{o}}es-problema em matem{\'{a}}tica por meio de uma ferramenta digital}},
year = {2022}
}
@article{Watanobe2022,
abstract = {The development and operation of Online Judge System (OJS), which is used to evaluate the correctness of programs, is a nontrivial and difficult task due to the various functional and non-functional requirements. However, although many OJSs have been developed and operated, and their usefulness reported, the theory for constructing OJSs has not been sufficiently discussed. In this paper, we present the functional and nonfunctional requirements oriented to OJS as well as demonstrate the internal components and software architecture of an OJS, which has been in operation for over a decade and has evaluated over six million solutions. We also present real-world experiences and challenges encountered during this long journey of our OJS.},
author = {Watanobe, Yutaka and Rahman, Md Mostafizer and Matsumoto, Taku and Rage, Uday Kiran and Ravikumar, Penugonda},
doi = {10.1142/S0218194022500346},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2022/Online Judge System Requirements, Architecture, and Experiences - International Journal of Software Engineering and Knowledge Engineerin.pdf:pdf},
issn = {02181940},
journal = {International Journal of Software Engineering and Knowledge Engineering},
keywords = {Online judge system,Online judge system architecture,Online judge system requirements,Programming support systems},
number = {6},
pages = {917--946},
title = {{Online Judge System: Requirements, Architecture, and Experiences}},
volume = {32},
year = {2022}
}
@phdthesis{Pereira2021,
author = {Pereira, Filipe Dwan},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2021/Towards AI-human hybrid online judges to support decision making for CS1 stakeholders Towards AI-human hybrid online judges to support d.pdf:pdf},
number = {January},
title = {{Towards AI-human hybrid online judges to support decision making for CS1 stakeholders Towards AI-human hybrid online judges to support decision making for CS1 stakeholders}},
year = {2021}
}
@article{Naser2008,
abstract = {The aim of this study is developing an intelligent tutoring system for helping students enrolled in computer sciences 1 (an introductory C++ programming course) at the Faculty of Engineering and Information technology in Al-Azhar University. The C++ Intelligent Tutoring System is called CPP-Tutor. In this paper we present an overview of the CPP-Tutor architectural design and user interface. This pilot project is for constructing a model domain of a subset of the C++ programming language. The completed project will be sufficient to prove the concept and that a fully developed C++ Intelligent Tutoring System will provide an interactive learning environment for students. According to the success of other similar Intelligent Tutoring Systems, it is also hypothesized that students will be able to learn to program in C++ and gain knowledge more quickly and effectively than students using traditional methods of teaching. {\textcopyright} 2008 Asian Network for Scientific Information.},
author = {Naser, Samy S.Abu},
doi = {10.3923/itj.2008.1055.1060},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2008/Developing an intelligent tutoring system for students learning to program in C - Information Technology Journal - 2008.pdf:pdf},
journal = {Information Technology Journal},
keywords = {Artificial intelligence,C++,E-leaming,Intelligent tutoring system,Programming,Vinicius},
mendeley-tags = {Vinicius},
number = {7},
pages = {1055--1060},
title = {{Developing an intelligent tutoring system for students learning to program in C++}},
volume = {7},
year = {2008}
}
@inproceedings{Parihar2017,
abstract = {We present GradeIT, a system that combines the dual objectives of automated grading and program repairing for introductory programming courses (CS1). Syntax errors pose a significant challenge for testcase-based grading as it is difficult to differentiate between a submission that is almost correct and has some minor syntax errors and another submission that is completely off-the-mark. GradeIT also uses program repair to help in grading submissions that do not compile. This enables running testcases on submissions containing minor syntax errors, thereby awarding partial marks for these submissions (which, without repair, do not compile successfully and, hence, do not pass any testcase). Our experiments on 15613 submissions show that GradeIT results are comparable to manual grading by teaching assistants (TAs), and do not suffer from unintentional variability that happens when multiple TAs grade the same assignment. The repairs performed by GradeIT enabled successful compilation of 56% of the submissions having compilation errors, and resulted in an improvement in marks for 11 % of these submissions.},
author = {Parihar, Sagar and Das, Rajdeep and Dadachanji, Ziyaan and Karkare, Amey and Singh, Praveen Kumar and Bhattacharya, Arnab},
booktitle = {Annual Conference on Innovation and Technology in Computer Science Education, ITiCSE},
doi = {10.1145/3059009.3059026},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2017/Automatic grading and feedback using program repair for introductory programming courses - Annual Conference on Innovation and Technolog.pdf:pdf},
isbn = {9781450347044},
keywords = {Automated grading,CS1,Programming assignments,Vinicius},
mendeley-tags = {Vinicius},
month = {jun},
pages = {92--97},
publisher = {Association for Computing Machinery},
title = {{Automatic grading and feedback using program repair for introductory programming courses}},
volume = {Part F1286},
year = {2017}
}
@phdthesis{CRISTINAALBAWILDTTORREZZAN2014,
author = {{Cristina Alba Wildt Torrezzan}},
booktitle = {UFRGS},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2014/CONSTRUMED Metodologia para a constru{\c{c}}{\~{a}}o de materiais educacionais digitais baseados no design pedag{\'{o}}gico - UFRGS - 2014.pdf:pdf},
number = {no. 2},
pages = {1--46},
title = {{CONSTRUMED: Metodologia para a constru{\c{c}}{\~{a}}o de materiais educacionais digitais baseados no design pedag{\'{o}}gico}},
url = {http://journal.stainkudus.ac.id/index.php/equilibrium/article/view/1268/1127},
volume = {3},
year = {2014}
}
@phdthesis{Sirhaug2018,
abstract = {{\ldots} Agrawal and Sharma [1] did a review of different plagiarism detection tools, where natural language processing techniques where used in one of those tools {\ldots} Today, examples of code idiom usage include bug detection [17] and building code from templates [7], in addition to {\ldots}},
author = {Sirhaug, J},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2018/Automatic Grading of Programming Exams - Unknown - 2018.pdf:pdf},
number = {June},
title = {{Automatic Grading of Programming Exams}},
url = {https://ntnuopen.ntnu.no/ntnu-xmlui/handle/11250/2570461},
year = {2018}
}
@unpublished{MardiaRahmidalamOboi2013,
author = {{Mardia Rahmi dalam Oboi}, Sherone Caroline U},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2013/Online Programming Judge System (UOJ) - Unknown - 2013.pdf:pdf},
number = {January},
title = {{Online Programming Judge System (UOJ)}},
year = {2013}
}
@phdthesis{ClovisDaSilveira2022,
abstract = {ביקורת ספרות, "הבז", ספרות טבע,},
author = {{Cl{\'{o}}vis Da Silveira}},
booktitle = {UFRGS},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2022/Desenvolvimento de um framework com estrat{\'{e}}gias de avalia{\c{c}}{\~{a}}o de agentes conversacionais educacionais - UFRGS - 2022.pdf:pdf},
number = {8.5.2017},
pages = {2003--2005},
title = {{Desenvolvimento de um framework com estrat{\'{e}}gias de avalia{\c{c}}{\~{a}}o de agentes conversacionais educacionais}},
year = {2022}
}
@article{Menezes2021,
author = {de Menezes, Giullia Rodrigues and Pereira, Jo{\~{a}}o Henrique de Souza and Theodoro, Luiz Cl{\'{a}}udio},
doi = {10.36558/rsc.v11i3.7383},
file = {:home/alessio/Dropbox/Doutorado/mendeley/2021/An{\'{a}}lise do perfil dos medalhistas da olimp{\'{i}}ada brasileira de inform{\'{a}}tica 2019 - Revista de Sistemas e Computa{\c{c}}{\~{a}}o - 2021.pdf:pdf},
issn = {22372903},
journal = {Revista de Sistemas e Computa{\c{c}}{\~{a}}o},
number = {3},
pages = {4--16},
title = {{An{\'{a}}lise do perfil dos medalhistas da olimp{\'{i}}ada brasileira de inform{\'{a}}tica 2019}},
url = {https://revistas.unifacs.br/index.php/rsc/article/view/7383/4480},
volume = {11},
year = {2021}
}
